name: GitHub Actions
on: [ push ]
env:
  GO_VERSION: 1.17
  SERVICE_IMAGE_NAME: "keboola/webhooks-api"

jobs:
  test:
    runs-on: ubuntu-latest
    name: test
    steps:
      - name: Setup line endings
        run: git config --global core.autocrlf false
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install tools
        run: . ./scripts/tools.sh
        shell: bash
      - name: Generate code
        run: make generate-api
      - name: Run tests
        run: |
          make mod
          make tests
        shell: bash
        env:
          VERSION: ${{ needs.set-version.outputs.version }}
          TEST_KBC_PROJECTS: ${{ env[matrix.projects] }}
          TEST_PARALLELISM: 16

  lint:
    needs:
      - set-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install tools
        run: . ./scripts/tools.sh
        shell: bash
      - name: Generate code
        run: make generate-api
      - name: Run code linters
        run: |
          make mod
          make lint
        shell: bash
        env:
          VERSION: ${{ needs.set-version.outputs.version }}
          TEST_KBC_PROJECTS: ${{ env[matrix.projects] }}
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - test
      - lint
    if: startsWith(github.ref, 'refs/tags/templates-api-v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Generate code
        run: make generate-api
      - name: Build image
        uses: docker/build-push-action@v2
        env:
          TAG: ${{ needs.set-version.outputs.tag }}
        with:
          load: true
          tags: ${{ env.SERVICE_IMAGE_NAME }}:${{ env.TAG }}
          file: Dockerfile-api
